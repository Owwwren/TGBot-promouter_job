from aiogram import types, Dispatcher
from config import bot, status
from Keyboard import kstart, admin_panel_start, start_kb, sand_map
from db_config.Sq_admin_config import SQLighter


ID = 0
USER = 0
db = SQLighter('db.db')

async def start(message: types.Message):
    global ID
    global mes
    ID = message.from_user.id
    if message.text == "/start":
        if db.selekt_id_admin(message.from_user.id) :
            if db.selekt_status_admin('ADMIN', id=ID):
                mes = await message.answer("–í—ã–±–µ—Ä–∏—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ø–∞–Ω–µ–ª—å", reply_markup=admin_panel_start)
                await message.delete()
                await status.start_admin_panel.set()
                db.delete_all(message.from_user.id, photo=0)
            elif db.selekt_status_admin('CUST', id=ID):
                await message.answer("HELLO!", reply_markup=kstart)
                await message.delete()
                await status.job.set()
                db.delete_all(message.from_user.id, photo=0)
            else:
                await message.answer(f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ\n ‚ü™–í —Ä–∞–±–æ—Ç–µ‚ü´", reply_markup=kstart)
                await message.delete()
                await status.job.set()
                db.delete_all(message.from_user.id, photo=0)
        else:
            await message.answer("–í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–µ—Å—Ç—Ä–∞—Ç–æ—Ä—É")
    elif message.text == "id":
        global USER
        USER = message.from_user.id, message.from_user.first_name
        await bot.send_message(1853593910, USER)
    elif message.text == '45g67788794357887567b6bbbBnm786NN998Mm89m786m79976':
        await bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞!'
                                                    '\n –í—ã–±–µ—Ä–µ—Ç–∏ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å', reply_markup=start_kb)
        await status.admin_start.set()
    else:
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

#@dp.message_handler(state=status.start_admin_panel)
async def start_admin_panel(message: types.Message):
    if message.text == '–ê–î–ú–ò–ù':
        await bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞!'
                                                     '\n –í—ã–±–µ—Ä–µ—Ç–∏ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å', reply_markup=start_kb)
        await status.admin_start.set()
        db.delete_all(message.from_user.id, photo=0)
        db.connection.commit()
        await mes.delete()
    elif message.text == '–ü—Ä–æ–º–æ—É—Ç–µ—Ä':
        await message.answer(f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ\n ‚ü™–í —Ä–∞–±–æ—Ç–µ‚ü´", reply_markup=kstart)
        await message.delete()
        await status.job.set()
        db.delete_all(message.from_user.id, photo=0)
        db.connection.commit()
        await mes.delete()
    elif message.text == '–ó–∞–∫–∞–∑—á–∏–∫':
        await message.answer("HELLO!", reply_markup=kstart)
        await message.delete()
        await status.job.set()
        db.delete_all(message.from_user.id, photo=0)
        db.connection.commit()
        await mes.delete()
    else:
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–∏ –∫–Ω–æ–ø–∫—É –≤ –ø–∞–Ω–µ–ª–∏.')

#@dp.message_handler(state=status.job)
async def job(message: types.Message):
    global number
    global mes
    if message.text == "üèÜ –í —Ä–∞–±–æ—Ç–µ":
        await message.delete()
        await status.map.set()
        await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã.', reply_markup=sand_map)
        number = 0
    elif message.text == '45g67788794357887567b6bbbBnm786NN998Mm89m786m79976':
        await bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞!'
                                                    '\n –í—ã–±–µ—Ä–µ—Ç–∏ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å.', reply_markup=start_kb)
        await status.admin_start.set()
    elif message.text == '/start':
        if db.selekt_status_admin('ADMIN', id=ID):
            mes = await message.answer("–í—ã–±–µ—Ä–∏—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ø–∞–Ω–µ–ª—å.", reply_markup=admin_panel_start)
            await message.delete()
            await status.start_admin_panel.set()
            db.delete_all(message.from_user.id, photo=0)
        else:
            await message.answer('–ù–∞–∂–º–∏—Ç–µ ‚ü™–í —Ä–∞–±–æ—Ç–µ‚ü´.')
            await message.delete()
    else:
        await message.answer('–ù–∞–∂–º–∏—Ç–µ ‚ü™–í —Ä–∞–±–æ—Ç–µ‚ü´.')
        await message.delete()


def register_handler_register(dp: Dispatcher):
    dp.register_message_handler(start_admin_panel, state=status.start_admin_panel)
    dp.register_message_handler(start, content_types=['text'], state=None)
    dp.register_message_handler(job, state=status.job)